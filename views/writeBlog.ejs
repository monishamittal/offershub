<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Blog Form</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Allerta&family=Dosis:wght@200..800&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Manrope:wght@200..800&family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Share:ital,wght@0,400;0,700;1,400;1,700&family=Space+Grotesk:wght@300..700&display=swap');

        body {
            font-family: "Manrope", serif;
            margin: 20px;
            line-height: 1.6;
            background-color: #f4f4f4;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        form {
            /* max-width: 600px; */
            margin: auto;
            padding: 20px;
            background: #fff;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            /* font-weight: bold; */
            display: block;
            margin-bottom: 8px;
            color: #555;
        }

        input,
        textarea,
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #007BFF;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
        }

        button:hover {
            background-color: #0056b3;
        }

        .blog-preview {
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .blog-preview img {
            max-width: 100%;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .blog-preview h1,
        .blog-preview h2 {
            margin-bottom: 10px;
            color: #333;
        }

        .blog-preview ul,
        .blog-preview ol {
            margin: 15px 0;
            padding-left: 20px;
        }

        .blog-preview ul li,
        .blog-preview ol li {
            margin-bottom: 5px;
        }

        @media (max-width: 768px) {

            form,
            .blog-preview {
                padding: 15px;
            }

            button {
                font-size: 14px;
            }
        }

        .tag-selector {
            list-style-type: none;
            background-color: rgba(0, 0, 0, 0.167);
            padding: 10px;
            display: flex;
            flex-direction: row;
            gap: 10px;
            width: fit-content;
            margin-bottom: 10px;
            justify-content: center;
            align-items: center;
            max-width: fit-content;
            margin-inline: auto;
        }

        .tag-selector li {
            background-color: rgb(230, 230, 230);
            border: 1px solid black;
            border-style: dashed;
            width: fit-content;
            padding: 5px;
            cursor: pointer;
        }

        .tag-selector li:hover {
            background-color: white;
        }

        .options {
            display: flex;
            gap: 10px;
            align-items: baseline;
            padding: 10px;

        }

        .types {
            display: flex;
            gap: 10px;
            justify-content: center;
            align-items: center;
        }

        .options span {
            border: 1px solid black;
            border-style: dashed;
            width: fit-content;
            padding: 3px;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <form id="blog-form" action="/submit-blog" method="POST">
        <label for="main-title">Title</label>
        <input type="text" id="main-title" name="main_title" placeholder="Enter a Title" required>

        <label for="header-image">Cover Image</label>
        <input type="url" id="header-image" name="header_image" placeholder="Upload Cover Image" required>

        <label for="small-title">Category</label>
        <input type="text" id="small-title" name="small_title" placeholder="Enter Category" required>

        <div class="tag-selector">
            <li id="paragraph">Paragraph</li>
            <li id="ordered-list">Ordered-List</li>
            <li id="unordered-list">Unordered-List</li>
        </div>

        <div id="additional-elements"></div>

        <button type="submit">Submit Blog</button>
    </form>

    <div class="blog-preview" id="blog-preview" style="display: none;"></div>

    <script>
        const additionalElements = document.getElementById('additional-elements');
        const blogPreview = document.getElementById('blog-preview');

        // Generate a new content block dynamically
        document.getElementById('paragraph').addEventListener('click', () => {
            const paragraphElement = document.createElement('div');
            paragraphElement.innerHTML = `
            <label for="content">Paragraph</label>
            <textarea name="content" rows="4" placeholder="Add your content here"></textarea>`;
            additionalElements.appendChild(paragraphElement);
        });

        document.getElementById('ordered-list').addEventListener('click', () => {
            const orderedListElement = document.createElement('div');
            orderedListElement.className = "ordered-list";
            orderedListElement.innerHTML = `
            <div class="options">
                <label>Ordered-List</label>
                <div class="types">
                    <input type="radio" name="ol_type" value="1" checked><label>1,2,3</label>
                    <input type="radio" name="ol_type" value="a"><label>a,b,c</label>
                    <input type="radio" name="ol_type" value="A"><label>A,B,C</label>
                    <input type="radio" name="ol_type" value="i"><label>i,ii,iii</label>
                </div>
                <span onclick="addPoint('ol', this)">+ Add Point</span>
            </div>
            <div class="container"></div>`;
            additionalElements.appendChild(orderedListElement);
        });

        document.getElementById('unordered-list').addEventListener('click', () => {
            const unorderedListElement = document.createElement('div');
            unorderedListElement.className = "unordered-list";
            unorderedListElement.innerHTML = `
            <div class="options">
                <label>Unordered-List</label>
                <div class="types">
                    <input type="radio" name="ul_type" value="circle" checked><label>Circle</label>
                    <input type="radio" name="ul_type" value="disc"><label>Disc</label>
                    <input type="radio" name="ul_type" value="square"><label>Square</label>
                    <input type="radio" name="ul_type" value="none"><label>None</label>
                </div>
                <span onclick="addPoint('ul', this)">+ Add Point</span>
            </div>
            <div class="container"></div>`;
            additionalElements.appendChild(unorderedListElement);
        });

        function addPoint(listType, triggerElement) {
            const container = triggerElement.parentElement.nextElementSibling;
            const inputField = document.createElement('input');
            inputField.type = 'text';
            inputField.placeholder = `Enter ${listType === 'ol' ? 'ordered' : 'unordered'} list item`;
            container.appendChild(inputField);
        }

        document.getElementById('blog-form').addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = {
                main_title: document.getElementById('main-title').value,
                header_image: document.getElementById('header-image').value,
                small_title: document.getElementById('small-title').value,
                blocks: []
            };

            additionalElements.querySelectorAll('div').forEach((block) => {
                if (block.classList.contains('ordered-list')) {
                    const listType = block.querySelector('input[name="ol_type"]:checked').value;
                    const items = [...block.querySelectorAll('.container input')].map(input => input.value);
                    formData.blocks.push({ type: 'ordered-list', listType, items });
                } else if (block.classList.contains('unordered-list')) {
                    const listType = block.querySelector('input[name="ul_type"]:checked').value;
                    const items = [...block.querySelectorAll('.container input')].map(input => input.value);
                    formData.blocks.push({ type: 'unordered-list', listType, items });
                } else if (block.querySelector('textarea')) {
                    const content = block.querySelector('textarea').value;
                    formData.blocks.push({ type: 'paragraph', content });
                }
            });

            generatePreview(formData);
        });


        function generatePreview(formData) {

            const htmlContent = `<div class="container">
            <img src="${formData.header_image}" alt="Header Image" class="header-image">
            <div class="small-title">${formData.small_title}</div>
            <div class="main-title">${formData.main_title}</div>
            <div class="content">
                ${formData.blocks.map(block => {
                if (block.type === 'paragraph') {
                    return `<p>${block.content}</p>`;
                } else if (block.type === 'ordered-list') {
                    return `<ol type="${block.listType}">${block.items.map(item => `<li>${item}</li>`).join('')}</ol>`;
                } else if (block.type === 'unordered-list') {
                    return `<ul style="list-style-type: ${block.listType}">${block.items.map(item => `<li>${item}</li>`).join('')}</ul>`;
                }
            }).join('')}
            </div>
            </div>`

            blogPreview.style.display = 'block';
            blogPreview.innerHTML = htmlContent;

            fetch('/blog/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    content: htmlContent,
                }),
            })
                .then(response => response.json())
                .then(data => console.log(data))
                .catch(error => console.error('Error:', error));
        }
    </script>
</body>

</html>